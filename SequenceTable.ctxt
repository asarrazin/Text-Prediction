#BlueJ class context
comment0.target=SequenceTable
comment0.text=\n\ SequenceTable\n\ \ Reads\ a\ text\ file\ and\ stores\ string\ sequences\ and\ FrequencyMap\ objects\ within\ the\ \n\ \ SequenceTable\ objects.\ Used\ to\ return\ lists\ of\ word\ suggestions\ based\ off\ of\ a\ particular\ word\n\ \ Reads\ an\ input\ text\ files\ into\ the\ table\ and\ creates\ FrequencyMaps,\ storing\ the\ FrequencyMaps\ \n\ \ in\ the\ Map\ instance\ variable.\ Also\ stores\ sets\ for\ topicVerbs,\ topicNouns,\ topicAdjectives\ which\ \n\ \ represent\ the\ words\ that\ if\ encountered\ will\ indicate\ that\ this\ table's\ topic\ is\ the\ topic\ of\ the\n\ \ sentence.\ \n\ \ \n\ @author\ Ana\u00EFs\ Sarrazin\ &\ Jack\ O'Connor\n
comment1.params=name
comment1.target=SequenceTable(java.lang.String)
comment1.text=\n\ Constructor\ that\ maps\ string\ sequences\ to\ FrequencyMaps.\n
comment10.params=lines
comment10.target=void\ addSequence(java.lang.String)
comment10.text=\n\ addSequence\n\ Maps\ the\ words\ to\ FrequencyMaps\ storing\ word\ frequencies.\n\ \n\ @param\ lines\ the\ string\ of\ the\ text\ from\ the\ file\ that\ was\ read\n
comment11.params=word
comment11.target=java.util.List\ nextWord(java.lang.String)
comment11.text=\n\ Generates\ a\ list\ of\ possible\ next\ words\ based\ off\ the\ previous\ words.\n\ \ \ \n\ @param\ word\ the\ current\ word\ being\ used\ to\ determine\ next\ words\ \n\ @return\ nextCharacter\ a\ character\ randomly\ generated\ using\ the\ pickChar\ in\ FrequencyMap\n
comment12.params=lastWord\ dictionary
comment12.target=java.util.List\ pickGeneric(java.lang.String,\ java.util.Map)
comment12.text=\n\ pickGeneric\n\ picks\ a\ list\ of\ generic\ words\ to\ return\ based\ on\ the\ part\ of\ speach\ of\ the\ given\ word\n\ \n\ @param\ lastWord\ String\ representing\ the\ word\ in\ question\n\ @param\ dictionary\ Map\ representing\ the\ part\ of\ speech\ information\n
comment2.params=
comment2.target=java.lang.String\ getTableName()
comment3.params=
comment3.target=java.util.Set\ getTopicNouns()
comment4.params=
comment4.target=java.util.Set\ getTopicVerbs()
comment5.params=
comment5.target=java.util.Set\ getTopicAdj()
comment6.params=dict
comment6.target=void\ setDictionary(java.util.HashMap)
comment7.params=words
comment7.target=void\ setGenericSet(java.lang.String)
comment7.text=\n\ setGenericSet\n\ adds\ the\ generic\ words\ to\ the\ GenericSet\ for\ the\ table\n\ \n\ @param\ words\ the\ String\ representing\ the\ generic\ words\ to\ be\ put\ into\ the\ set\n
comment8.params=
comment8.target=java.lang.String\ scanText()
comment8.text=\n\ scanText\n\ Prompts\ the\ user\ for\ filename\ and\ desired\ klevel\ of\ analysis.\ \n\ Then\ it\ reads\ in\ the\ text\ of\ the\ file.\ \n\ @return\ a\ string\ representation\ of\ the\ text\ in\ the\ file.\ \n
comment9.params=filename
comment9.target=java.lang.String\ readFileAsString(java.lang.String)
comment9.text=\n\ readFileAsString\n\ Reads\ the\ file\ and\ returns\ a\ string\ representation\ of\ it.\n\ @\ param\ filename\ the\ name\ of\ the\ file\ input\ by\ the\ user.\ \n\ @\ returns\ a\ string\ if\ the\ file\ is\ found\ in\ the\ computer's\ directory\ or\ null\ if\ the\ file\n\ \ \ was\ not\ recognized.\n\ \ \ \n\ \ @author\ Sean\ Barker\ \n
numComments=13
